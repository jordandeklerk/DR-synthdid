[tox]
envlist =
    check
    minimal
    {py310,py311,py312,py313}{,-coverage}
isolated_build = True
isolated_build_env = build

[gh-actions]
python =
    3.10: py310-coverage
    3.11: py311-coverage
    3.12: py312-coverage, minimal, check
    3.13: py313-coverage

[testenv]
basepython =
    py310: python3.10
    py311: python3.11
    py312: python3.12
    py313: python3.13
    {minimal,check}: python3
setenv =
    PYTHONUNBUFFERED = yes
    PYTEST_EXTRA_ARGS = -s
    coverage: PYTEST_EXTRA_ARGS = --cov --cov-report xml --cov-report term
passenv =
    *
extras =
    test
commands =
    # Check if tests directory exists and has test files
    python -c "import os, sys; sys.exit(0 if os.path.exists('tests') and any(f.startswith('test_') and f.endswith('.py') for f in os.listdir('tests')) else 1)" && \
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv} || \
    echo "No tests found. Skipping test execution."

[testenv:minimal]
extras = test
commands =
    # Check if tests directory exists and has test files
    python -c "import os, sys; sys.exit(0 if os.path.exists('tests') and any(f.startswith('test_') and f.endswith('.py') for f in os.listdir('tests')) else 1)" && \
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv} || \
    echo "No tests found. Skipping test execution."
setenv =
    PYTEST_EXTRA_ARGS = -s

[testenv:check]
description = perform style checks
deps =
    build
    pre-commit
    black
    isort
    flake8
    mypy
skip_install = true
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure
    python -m build

[flake8]
max-line-length = 120
extend-ignore = E203
exclude = .tox,*.egg,build,data
select = E,W,F

[isort]
profile = black
line_length = 120
multi_line_output = 3

[pytest]
testpaths = tests
python_files = test_*.py
python_functions = test_*